from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
import time, os
import subprocess
from DataFetch import ExportPdf
import DataValues as dv

def DownloadFromChrome(download_link):
    try:
        subprocess.run(f"start {download_link}", shell=True, text=True)
    except Exception as e:
        print("Problem occured with Chrome testing:", str(e))

def DownloadAnyExploit(download_url):
    opts = Options()
    downloads_folder = os.path.join(os.path.expandvars("%USERPROFILE%"), "Desktop")
    prefs = {
        'download.default_directory': downloads_folder,
        'download.prompt_for_download': False,
        'download.extensions_to_open': 'rb,eml',  
        'safebrowsing.enabled': True
    }
    opts.add_experimental_option('prefs', prefs)

    driver = webdriver.Chrome(options=opts)
    driver.get(download_url)
    time.sleep(5)

def RunExploitDbSelenium(search_query):
    opts = Options()
    downloads_folder = os.path.join(os.path.expandvars("%USERPROFILE%"), "Desktop")
    prefs = {
        'download.default_directory': downloads_folder,
        'download.prompt_for_download': False,
        'download.extensions_to_open': 'rb,eml',  
        'safebrowsing.enabled': True
    }
    opts.add_experimental_option('prefs', prefs)

    driver = webdriver.Chrome(options=opts)
    driver.get(f"https://www.exploit-db.com/search?cve={search_query}")

    time.sleep(2)

    download_links = driver.find_elements(By.XPATH, '//table[@id="exploits-table"]/tbody//a[@href]')

    if download_links != []:
        counter = 0
        href_link = ""
        title_name = ""
        for link in download_links:
            if "download" in str(link.get_attribute("href")):
                href_link = str(link.get_attribute('href'))
                counter += 1
            if "exploits" in str(link.get_attribute("href")):
                title_name = link.accessible_name
                counter += 1
            if counter == 2:
                dv.exploits.append([title_name, href_link])
                href_link = ""
                title_name = ""
                counter = 0



input_cve = input("Enter the CVE (e.g., CVE-2021-12345): ")
RunExploitDbSelenium(input_cve)
ExportPdf(input_cve)
DownloadFromChrome(dv.pdf_file_name)
